version: "3.9"
services:
  frontend:
    container_name: frontend
    restart: unless-stopped
    build:
      context: ./Dockdir
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app:delegated
      - /app/node_modules
    ports:
      - 8080:3000
    environment:
      - CHOKIDAR_USEPOLLING=true 
    networks:
      - my_net

  backend:
    container_name: backend
    restart: unless-stopped
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app:delegated
      - /app/node_modules
      - ./backend/nodemon.json:/app/nodemon.json
    ports:
      - 3000:3000
    command: npm start
    environment:
      - CHOKIDAR_USEPOLLING=true 
    networks:
      - my_net

  backend_nest:
    container_name: backend
    restart: unless-stopped
    build:
      context: ./backend_nest
      dockerfile: Dockerfile
    volumes:
      - ./backend_nest:/app:delegated
      - /app/node_modules
      - ./backend_nest/nodemon.json:/app/nodemon.json
    ports:
      - 3000:3000
    command: npm start
    environment:
      - CHOKIDAR_USEPOLLING=true 
    networks:
      - my_net

  postgres_db:
    container_name: db
    build:
      context: .
      args:
        - ROOT_UID=${HOST_UID-1000}
        - ROOT_GID=${ROOT_GID-1000}
      dockerfile: Dockerfile.postgres
    # image: postgres:15.2-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=${PGDATA}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    env_file:
      - .env
    networks:
      - my_net

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - 8081:80
    networks:
      - my_net

networks:
  my_net:

volumes:
  pgdata:
# volumes:
#   pgdata:
#     driver: local
#     driver_opts:
#       type: 'none' 
#       o: 'bind'
#       device: '/sgoinfre/goinfre/Perso/pcamaren/ft_transcendance/pgdata'
