version: "3.9"
services:
  frontend:
    container_name: front_end_reactjs
    restart: unless-stopped
    build:
      context: ./Dockdir
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app:delegated
      - /app/node_modules
    ports:
      - 8080:3000
    environment:
      - CHOKIDAR_USEPOLLING=true 
    networks:
      - my_net

  backend:
    container_name: back_end_nest
    restart: unless-stopped
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app:delegated
      - /app/node_modules
      - ./backend/nodemon.json:/app/nodemon.json
    ports:
      - 3000:3000
    command: npm start
    environment:
      - CHOKIDAR_USEPOLLING=true 
    networks:
      - my_net
      
  postgres_db:
    container_name: db
    image: postgres:14.1-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=${PGDATA}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - '5432:5432'
    volumes: 
      # - ./postgres_initdb/schema.sql:/docker-entrypoint-initdb.d/schema.sql:Z
      - ./data_temp/:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - my_net

networks:
  my_net:

